//
//  AppDelegate.swift
//  iosApp
//
//  Created by –¢–∞—Ç—å—è–Ω–∞ –¢–∞—Ç–∞—Ä–µ–Ω–∫–æ on 21/06/25.
//  Copyright ¬© 2025 orgName. All rights reserved.
//

import UIKit
import FirebaseCore
import FirebaseMessaging
import UserNotifications

class AppDelegate: UIResponder, UIApplicationDelegate, UNUserNotificationCenterDelegate, MessagingDelegate {

    func application(_ application: UIApplication,
                     didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {
        print("üü¢ App –∑–∞–ø—É—â–µ–Ω")
        FirebaseApp.configure()

        UNUserNotificationCenter.current().delegate = self
        Messaging.messaging().delegate = self

        UNUserNotificationCenter.current().requestAuthorization(options: [.alert, .badge, .sound]) { granted, error in
            print("üîî –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: \(granted)")
            if let error = error {
                print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π: \(error)")
            }
        }

        application.registerForRemoteNotifications()
        print("üì° –ó–∞–ø—Ä–æ—à–µ–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –¥–ª—è remote notifications")

        return true
    }

    func application(_ application: UIApplication,
                     didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {
        let tokenString = deviceToken.map { String(format: "%02.2hhx", $0) }.joined()
        print("‚úÖ APNs —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: \(tokenString)")
        Messaging.messaging().apnsToken = deviceToken
    }

    func application(_ application: UIApplication,
                     didFailToRegisterForRemoteNotificationsWithError error: Error) {
        print("‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ remote notifications: \(error)")
    }

    func messaging(_ messaging: Messaging, didReceiveRegistrationToken fcmToken: String?) {
        print("üì≤ –ü–æ–ª—É—á–µ–Ω FCM-—Ç–æ–∫–µ–Ω: \(fcmToken ?? "nil")")
    }

    // –ü—É—à –ø–æ–ª—É—á–µ–Ω –≤ foreground
    func userNotificationCenter(_ center: UNUserNotificationCenter,
                                willPresent notification: UNNotification,
                                withCompletionHandler completionHandler: @escaping (UNNotificationPresentationOptions) -> Void) {
        print("üì• –ü—É—à –ø–æ–ª—É—á–µ–Ω –≤ foreground: \(notification.request.content.userInfo)")
        completionHandler([.sound, .badge])
    }

    // –ü—É—à –Ω–∞–∂–∞—Ç/–æ—Ç–∫—Ä—ã—Ç
    func userNotificationCenter(_ center: UNUserNotificationCenter,
                                didReceive response: UNNotificationResponse,
                                withCompletionHandler completionHandler: @escaping () -> Void) {
        print("üì® –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞–ª —Å –ø—É—à–µ–º: \(response.notification.request.content.userInfo)")
        completionHandler()
    }
}
